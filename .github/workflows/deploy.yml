# deploy.yml
# Generated by Docker Scaffold CLI
# This file defines the GitHub Actions workflow for deploying your application.
 
name: Deploy timroticketorganizer staging to VPS
 
on:
  push:
    branches: [staging]
  pull_request:
    branches: [staging]
 
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
 
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSHKEY }}
 
      - name: Clone repository to VPS or Pull changes if already cloned
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            if [ ! -d "/var/www/sandbox-organizer.timroticket.com/.git" ]; then
              GIT_SSH_COMMAND="ssh -i ~/.ssh/tt_staging_organizer_ed25519" git clone -b main git@github.com:BandBTech/event_ticketing_organizer.git /var/www/sandbox-organizer.timroticket.com/
            else
              cd /var/www/sandbox-organizer.timroticket.com/
              GIT_SSH_COMMAND="ssh -i ~/.ssh/tt_staging_organizer_ed25519" git reset --hard
              GIT_SSH_COMMAND="ssh -i ~/.ssh/tt_staging_organizer_ed25519" git pull origin main
            fi
          EOF
 
      - name: Build and Deploy App on VPS
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            cd /var/www/sandbox-organizer.timroticket.com/
            # Build and start Docker containers
            docker-compose down || true
            docker-compose up --build -d
            # Remove existing out folder
            rm -rf ./out
            # Get the container ID of the running container
            CONTAINER_ID=$(docker ps -q --filter "name=organizer_panel-app")
 
            # Copy the out folder from the container
            docker cp $CONTAINER_ID:/usr/share/nginx/html/. ./out/
          EOF